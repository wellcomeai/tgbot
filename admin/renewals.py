"""
–§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏—è–º–∏ –ø—Ä–æ–¥–ª–µ–Ω–∏—è –ø–æ–¥–ø–∏—Å–∫–∏ –¥–ª—è –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏
"""

from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import ContextTypes
from datetime import datetime
import logging

logger = logging.getLogger(__name__)


class RenewalMixin:
    """–ú–∏–∫—Å–∏–Ω –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å —Å–æ–æ–±—â–µ–Ω–∏—è–º–∏ –ø—Ä–æ–¥–ª–µ–Ω–∏—è –ø–æ–¥–ø–∏—Å–∫–∏"""
    
    async def show_renewal_menu(self, update: Update, context: ContextTypes.DEFAULT_TYPE):
        """–ü–æ–∫–∞–∑–∞—Ç—å –º–µ–Ω—é —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏—è–º–∏ –ø—Ä–æ–¥–ª–µ–Ω–∏—è"""
        renewal_data = self.db.get_renewal_message()
        
        if not renewal_data:
            await self.show_error_message(update, context, "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –ø—Ä–æ–¥–ª–µ–Ω–∏—è")
            return
        
        # –§–æ—Ä–º–∏—Ä—É–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ç–µ–∫—É—â–∏—Ö –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö
        text_info = renewal_data.get('text', '–ù–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–æ')[:100] + '...' if len(renewal_data.get('text', '')) > 100 else renewal_data.get('text', '–ù–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–æ')
        photo_info = "–ï—Å—Ç—å" if renewal_data.get('photo_url') else "–ù–µ—Ç"
        button_text_info = renewal_data.get('button_text', '–ù–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–æ')
        button_url_info = renewal_data.get('button_url', '–ù–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–æ')
        
        text = (
            "üí∞ <b>–°–æ–æ–±—â–µ–Ω–∏—è –ø—Ä–æ–¥–ª–µ–Ω–∏—è –ø–æ–¥–ø–∏—Å–∫–∏</b>\n\n"
            "‚è∞ <b>–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç—Å—è:</b> –í –¥–µ–Ω—å –∏—Å—Ç–µ—á–µ–Ω–∏—è –ø–æ–¥–ø–∏—Å–∫–∏ –≤ 12:00 –ú–°–ö\n\n"
            "<b>–¢–µ–∫—É—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏:</b>\n\n"
            f"üìù <b>–¢–µ–∫—Å—Ç:</b> {text_info}\n\n"
            f"üñº <b>–§–æ—Ç–æ:</b> {photo_info}\n\n"
            f"üîò <b>–ö–Ω–æ–ø–∫–∞:</b> {button_text_info}\n"
            f"üîó <b>URL –∫–Ω–æ–ø–∫–∏:</b> {button_url_info[:50]}{'...' if len(button_url_info) > 50 else ''}\n\n"
            "üí° <i>–í—Å–µ —Å—Å—ã–ª–∫–∏ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø–æ–ª—É—á–∞—é—Ç UTM –º–µ—Ç–∫–∏ –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –∫–æ–Ω–≤–µ—Ä—Å–∏–π.</i>\n\n"
            "–í—ã–±–µ—Ä–∏—Ç–µ —á—Ç–æ –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å:"
        )
        
        keyboard = [
            [InlineKeyboardButton("üìù –ò–∑–º–µ–Ω–∏—Ç—å —Ç–µ–∫—Å—Ç", callback_data="renewal_edit_text")],
            [InlineKeyboardButton("üñº –ò–∑–º–µ–Ω–∏—Ç—å —Ñ–æ—Ç–æ", callback_data="renewal_edit_photo")],
            [InlineKeyboardButton("üîò –ù–∞—Å—Ç—Ä–æ–∏—Ç—å –∫–Ω–æ–ø–∫—É", callback_data="renewal_edit_button")],
        ]
        
        # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è
        if renewal_data.get('photo_url'):
            keyboard.append([InlineKeyboardButton("‚ùå –£–¥–∞–ª–∏—Ç—å —Ñ–æ—Ç–æ", callback_data="renewal_remove_photo")])
        
        if renewal_data.get('button_text') and renewal_data.get('button_url'):
            keyboard.append([InlineKeyboardButton("üóë –£–¥–∞–ª–∏—Ç—å –∫–Ω–æ–ø–∫—É", callback_data="renewal_remove_button")])
        
        keyboard.extend([
            [InlineKeyboardButton("üìã –ü—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä", callback_data="renewal_preview")],
            [InlineKeyboardButton("üîÑ –°–±—Ä–æ—Å–∏—Ç—å –∫ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–º—É", callback_data="renewal_reset")],
            [InlineKeyboardButton("¬´ –ù–∞–∑–∞–¥", callback_data="admin_back")]
        ])
        
        reply_markup = InlineKeyboardMarkup(keyboard)
        
        await self.safe_edit_or_send_message(update, context, text, reply_markup)
    
    async def show_renewal_edit(self, update: Update, context: ContextTypes.DEFAULT_TYPE):
        """–ü–æ–∫–∞–∑–∞—Ç—å –¥–µ—Ç–∞–ª—å–Ω–æ–µ –º–µ–Ω—é —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –ø—Ä–æ–¥–ª–µ–Ω–∏—è"""
        renewal_data = self.db.get_renewal_message()
        
        if not renewal_data:
            await self.show_error_message(update, context, "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –ø—Ä–æ–¥–ª–µ–Ω–∏—è")
            return
        
        text = (
            f"üí∞ <b>–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è –ø—Ä–æ–¥–ª–µ–Ω–∏—è</b>\n\n"
            f"<b>–¢–µ–∫—É—â–∏–π —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è:</b>\n"
            f"{renewal_data.get('text', '–ù–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–æ')}\n\n"
            f"<b>–§–æ—Ç–æ:</b> {'–£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ' if renewal_data.get('photo_url') else '–ù–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ'}\n\n"
            f"<b>–ö–Ω–æ–ø–∫–∞:</b>\n"
            f"–¢–µ–∫—Å—Ç: {renewal_data.get('button_text', '–ù–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–æ')}\n"
            f"URL: {renewal_data.get('button_url', '–ù–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–æ')}\n\n"
            f"üí° <i>UTM –º–µ—Ç–∫–∏ –¥–æ–±–∞–≤–ª—è—é—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ.</i>\n\n"
            f"–í—ã–±–µ—Ä–∏—Ç–µ —á—Ç–æ –∏–∑–º–µ–Ω–∏—Ç—å:"
        )
        
        keyboard = [
            [InlineKeyboardButton("üìù –¢–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è", callback_data="renewal_edit_text")],
            [InlineKeyboardButton("üñº –§–æ—Ç–æ", callback_data="renewal_edit_photo")],
            [InlineKeyboardButton("üìù –¢–µ–∫—Å—Ç –∫–Ω–æ–ø–∫–∏", callback_data="renewal_edit_button_text")],
            [InlineKeyboardButton("üîó URL –∫–Ω–æ–ø–∫–∏", callback_data="renewal_edit_button_url")],
            [InlineKeyboardButton("¬´ –ù–∞–∑–∞–¥", callback_data="admin_renewal")]
        ]
        reply_markup = InlineKeyboardMarkup(keyboard)
        
        await self.safe_edit_or_send_message(update, context, text, reply_markup)
    
    async def show_renewal_edit_from_context(self, update: Update, context: ContextTypes.DEFAULT_TYPE):
        """–û—Ç–ø—Ä–∞–≤–∏—Ç—å –ù–û–í–û–ï —Å–æ–æ–±—â–µ–Ω–∏–µ –º–µ–Ω—é —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –ø—Ä–æ–¥–ª–µ–Ω–∏—è"""
        user_id = update.effective_user.id
        
        renewal_data = self.db.get_renewal_message()
        
        if not renewal_data:
            await context.bot.send_message(chat_id=user_id, text="‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –ø—Ä–æ–¥–ª–µ–Ω–∏—è")
            return
        
        message_text = (
            "üí∞ <b>–°–æ–æ–±—â–µ–Ω–∏—è –ø—Ä–æ–¥–ª–µ–Ω–∏—è –ø–æ–¥–ø–∏—Å–∫–∏</b>\n\n"
            "‚è∞ <b>–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç—Å—è:</b> –í –¥–µ–Ω—å –∏—Å—Ç–µ—á–µ–Ω–∏—è –ø–æ–¥–ø–∏—Å–∫–∏ –≤ 12:00 –ú–°–ö\n\n"
            "<b>–¢–µ–∫—É—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏:</b>\n\n"
            f"üìù <b>–¢–µ–∫—Å—Ç:</b> {renewal_data.get('text', '–ù–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–æ')[:100]}{'...' if len(renewal_data.get('text', '')) > 100 else ''}\n\n"
            f"üñº <b>–§–æ—Ç–æ:</b> {'–ï—Å—Ç—å' if renewal_data.get('photo_url') else '–ù–µ—Ç'}\n\n"
            f"üîò <b>–ö–Ω–æ–ø–∫–∞:</b> {renewal_data.get('button_text', '–ù–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–æ')}\n"
            f"üîó <b>URL –∫–Ω–æ–ø–∫–∏:</b> {renewal_data.get('button_url', '–ù–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–æ')[:50]}{'...' if len(renewal_data.get('button_url', '')) > 50 else ''}\n\n"
            "üí° <i>–í—Å–µ —Å—Å—ã–ª–∫–∏ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø–æ–ª—É—á–∞—é—Ç UTM –º–µ—Ç–∫–∏ –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –∫–æ–Ω–≤–µ—Ä—Å–∏–π.</i>\n\n"
            "–í—ã–±–µ—Ä–∏—Ç–µ —á—Ç–æ –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å:"
        )
        
        keyboard = [
            [InlineKeyboardButton("üìù –ò–∑–º–µ–Ω–∏—Ç—å —Ç–µ–∫—Å—Ç", callback_data="renewal_edit_text")],
            [InlineKeyboardButton("üñº –ò–∑–º–µ–Ω–∏—Ç—å —Ñ–æ—Ç–æ", callback_data="renewal_edit_photo")],
            [InlineKeyboardButton("üîò –ù–∞—Å—Ç—Ä–æ–∏—Ç—å –∫–Ω–æ–ø–∫—É", callback_data="renewal_edit_button")],
        ]
        
        # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è
        if renewal_data.get('photo_url'):
            keyboard.append([InlineKeyboardButton("‚ùå –£–¥–∞–ª–∏—Ç—å —Ñ–æ—Ç–æ", callback_data="renewal_remove_photo")])
        
        if renewal_data.get('button_text') and renewal_data.get('button_url'):
            keyboard.append([InlineKeyboardButton("üóë –£–¥–∞–ª–∏—Ç—å –∫–Ω–æ–ø–∫—É", callback_data="renewal_remove_button")])
        
        keyboard.extend([
            [InlineKeyboardButton("üìã –ü—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä", callback_data="renewal_preview")],
            [InlineKeyboardButton("üîÑ –°–±—Ä–æ—Å–∏—Ç—å –∫ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–º—É", callback_data="renewal_reset")],
            [InlineKeyboardButton("¬´ –ù–∞–∑–∞–¥", callback_data="admin_back")]
        ])
        
        reply_markup = InlineKeyboardMarkup(keyboard)
        
        await self.send_new_menu_message(context, user_id, message_text, reply_markup)
    
    async def show_renewal_button_setup(self, update: Update, context: ContextTypes.DEFAULT_TYPE):
        """–ü–æ–∫–∞–∑–∞—Ç—å –º–µ–Ω—é –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∫–Ω–æ–ø–∫–∏ –ø—Ä–æ–¥–ª–µ–Ω–∏—è"""
        renewal_data = self.db.get_renewal_message()
        
        text = (
            "üîò <b>–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∫–Ω–æ–ø–∫–∏ –ø—Ä–æ–¥–ª–µ–Ω–∏—è</b>\n\n"
            f"<b>–¢–µ–∫—É—â–∏–π —Ç–µ–∫—Å—Ç –∫–Ω–æ–ø–∫–∏:</b> {renewal_data.get('button_text', '–ù–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–æ')}\n"
            f"<b>–¢–µ–∫—É—â–∏–π URL:</b> {renewal_data.get('button_url', '–ù–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–æ')}\n\n"
            "üí° <i>–ö–Ω–æ–ø–∫–∞ –±—É–¥–µ—Ç –¥–æ–±–∞–≤–ª–µ–Ω–∞ –ø–æ–¥ —Å–æ–æ–±—â–µ–Ω–∏–µ–º –æ –ø—Ä–æ–¥–ª–µ–Ω–∏–∏ —Å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–º–∏ UTM –º–µ—Ç–∫–∞–º–∏.</i>\n\n"
            "–ß—Ç–æ —Ö–æ—Ç–∏—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å?"
        )
        
        keyboard = [
            [InlineKeyboardButton("üìù –¢–µ–∫—Å—Ç –∫–Ω–æ–ø–∫–∏", callback_data="renewal_edit_button_text")],
            [InlineKeyboardButton("üîó URL –∫–Ω–æ–ø–∫–∏", callback_data="renewal_edit_button_url")],
            [InlineKeyboardButton("¬´ –ù–∞–∑–∞–¥", callback_data="admin_renewal")]
        ]
        reply_markup = InlineKeyboardMarkup(keyboard)
        
        await self.safe_edit_or_send_message(update, context, text, reply_markup)
    
    async def show_renewal_preview(self, update: Update, context: ContextTypes.DEFAULT_TYPE):
        """–ü–æ–∫–∞–∑–∞—Ç—å –ø—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä —Å–æ–æ–±—â–µ–Ω–∏—è –ø—Ä–æ–¥–ª–µ–Ω–∏—è"""
        renewal_data = self.db.get_renewal_message()
        user_id = update.callback_query.from_user.id
        
        if not renewal_data or not renewal_data.get('text'):
            await update.callback_query.answer("‚ùå –°–Ω–∞—á–∞–ª–∞ –Ω–∞—Å—Ç—Ä–æ–π—Ç–µ —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è!", show_alert=True)
            return
        
        # –§–æ—Ä–º–∏—Ä—É–µ–º –ø—Ä–µ–≤—å—é
        preview_text = (
            "üìã <b>–ü—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä —Å–æ–æ–±—â–µ–Ω–∏—è –ø—Ä–æ–¥–ª–µ–Ω–∏—è</b>\n\n"
            "–¢–∞–∫ –±—É–¥–µ—Ç –≤—ã–≥–ª—è–¥–µ—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:\n\n"
            "‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ"
        )
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø—Ä–µ–≤—å—é
        await context.bot.send_message(
            chat_id=user_id,
            text=preview_text,
            parse_mode='HTML'
        )
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–∞–º–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –∫–∞–∫ –ø—Ä–µ–≤—å—é
        try:
            # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –µ—Å–ª–∏ –µ—Å—Ç—å –∫–Ω–æ–ø–∫–∞
            reply_markup = None
            if renewal_data.get('button_text') and renewal_data.get('button_url'):
                keyboard = [[InlineKeyboardButton(
                    renewal_data['button_text'], 
                    url=renewal_data['button_url']
                )]]
                reply_markup = InlineKeyboardMarkup(keyboard)
            
            if renewal_data.get('photo_url'):
                # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å —Ñ–æ—Ç–æ
                await context.bot.send_photo(
                    chat_id=user_id,
                    photo=renewal_data['photo_url'],
                    caption=renewal_data['text'],
                    parse_mode='HTML',
                    reply_markup=reply_markup
                )
            else:
                # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–æ–ª—å–∫–æ —Ç–µ–∫—Å—Ç
                await context.bot.send_message(
                    chat_id=user_id,
                    text=renewal_data['text'],
                    parse_mode='HTML',
                    reply_markup=reply_markup
                )
                
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–∫–ª—é—á–∏—Ç–µ–ª—å–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
            finish_text = (
                "‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ\n\n"
                "‚òùÔ∏è <b>–¢–∞–∫ –≤—ã–≥–ª—è–¥–∏—Ç –≤–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –ø—Ä–æ–¥–ª–µ–Ω–∏–∏</b>\n\n"
                "üí° –ü—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º –≤—Å–µ —Å—Å—ã–ª–∫–∏ –ø–æ–ª—É—á–∞—Ç UTM –º–µ—Ç–∫–∏ –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –∫–æ–Ω–≤–µ—Ä—Å–∏–π."
            )
            
            keyboard = [[InlineKeyboardButton("¬´ –í–µ—Ä–Ω—É—Ç—å—Å—è –∫ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º", callback_data="admin_renewal")]]
            reply_markup = InlineKeyboardMarkup(keyboard)
            
            await context.bot.send_message(
                chat_id=user_id,
                text=finish_text,
                parse_mode='HTML',
                reply_markup=reply_markup
            )
            
        except Exception as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –ø—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä–∞: {e}")
            await context.bot.send_message(
                chat_id=user_id,
                text="‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –ø—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä–∞. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏.",
                reply_markup=InlineKeyboardMarkup([[
                    InlineKeyboardButton("¬´ –ù–∞–∑–∞–¥", callback_data="admin_renewal")
                ]])
            )
    
    # === –û–ë–†–ê–ë–û–¢–ß–ò–ö–ò –í–í–û–î–ê ===
    
    async def handle_renewal_text_input(self, update: Update, context: ContextTypes.DEFAULT_TYPE, text: str):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–≤–æ–¥–∞ —Ç–µ–∫—Å—Ç–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –ø—Ä–æ–¥–ª–µ–Ω–∏—è"""
        user_id = update.effective_user.id
        
        if len(text) > 4096:
            await update.message.reply_text("‚ùå –¢–µ–∫—Å—Ç —Å–ª–∏—à–∫–æ–º –¥–ª–∏–Ω–Ω—ã–π. –ú–∞–∫—Å–∏–º—É–º 4096 —Å–∏–º–≤–æ–ª–æ–≤.")
            return
        
        self.db.set_renewal_message(text=text)
        await update.message.reply_text("‚úÖ –¢–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –ø—Ä–æ–¥–ª–µ–Ω–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω!")
        del self.waiting_for[user_id]
        await self.show_renewal_edit_from_context(update, context)
    
    async def handle_renewal_button_text_input(self, update: Update, context: ContextTypes.DEFAULT_TYPE, text: str):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–≤–æ–¥–∞ —Ç–µ–∫—Å—Ç–∞ –∫–Ω–æ–ø–∫–∏ –ø—Ä–æ–¥–ª–µ–Ω–∏—è"""
        user_id = update.effective_user.id
        
        if len(text) > 64:
            await update.message.reply_text("‚ùå –¢–µ–∫—Å—Ç –∫–Ω–æ–ø–∫–∏ —Å–ª–∏—à–∫–æ–º –¥–ª–∏–Ω–Ω—ã–π. –ú–∞–∫—Å–∏–º—É–º 64 —Å–∏–º–≤–æ–ª–∞.")
            return
        
        self.db.set_renewal_message(button_text=text)
        await update.message.reply_text("‚úÖ –¢–µ–∫—Å—Ç –∫–Ω–æ–ø–∫–∏ –æ–±–Ω–æ–≤–ª–µ–Ω!")
        del self.waiting_for[user_id]
        await self.show_renewal_edit_from_context(update, context)
    
    async def handle_renewal_button_url_input(self, update: Update, context: ContextTypes.DEFAULT_TYPE, text: str):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–≤–æ–¥–∞ URL –∫–Ω–æ–ø–∫–∏ –ø—Ä–æ–¥–ª–µ–Ω–∏—è"""
        user_id = update.effective_user.id
        
        if not (text.startswith("http://") or text.startswith("https://")):
            await update.message.reply_text("‚ùå URL –¥–æ–ª–∂–µ–Ω –Ω–∞—á–∏–Ω–∞—Ç—å—Å—è —Å http:// –∏–ª–∏ https://")
            return
        
        if len(text) > 256:
            await update.message.reply_text("‚ùå URL —Å–ª–∏—à–∫–æ–º –¥–ª–∏–Ω–Ω—ã–π.")
            return
        
        self.db.set_renewal_message(button_url=text)
        await update.message.reply_text("‚úÖ URL –∫–Ω–æ–ø–∫–∏ –æ–±–Ω–æ–≤–ª–µ–Ω!")
        del self.waiting_for[user_id]
        await self.show_renewal_edit_from_context(update, context)
    
    # === –î–û–ü–û–õ–ù–ò–¢–ï–õ–¨–ù–´–ï –û–ë–†–ê–ë–û–¢–ß–ò–ö–ò ===
    
    async def handle_renewal_callbacks(self, update: Update, context: ContextTypes.DEFAULT_TYPE):
        """–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ callback –¥–ª—è –ø—Ä–æ–¥–ª–µ–Ω–∏—è"""
        query = update.callback_query
        data = query.data
        
        if data == "renewal_edit_text":
            await self.request_text_input(update, context, "renewal_text")
        
        elif data == "renewal_edit_photo":
            await self.request_text_input(update, context, "renewal_photo")
        
        elif data == "renewal_edit_button":
            await self.show_renewal_button_setup(update, context)
        
        elif data == "renewal_edit_button_text":
            await self.request_text_input(update, context, "renewal_button_text")
        
        elif data == "renewal_edit_button_url":
            await self.request_text_input(update, context, "renewal_button_url")
        
        elif data == "renewal_remove_photo":
            self.db.set_renewal_message(photo_url="")
            await update.callback_query.answer("‚úÖ –§–æ—Ç–æ —É–¥–∞–ª–µ–Ω–æ!")
            await self.show_renewal_menu(update, context)
        
        elif data == "renewal_remove_button":
            self.db.set_renewal_message(button_text="", button_url="")
            await update.callback_query.answer("‚úÖ –ö–Ω–æ–ø–∫–∞ —É–¥–∞–ª–µ–Ω–∞!")
            await self.show_renewal_menu(update, context)
        
        elif data == "renewal_preview":
            await self.show_renewal_preview(update, context)
        
        elif data == "renewal_reset":
            # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ —Å–±—Ä–æ—Å–∞
            keyboard = [
                [InlineKeyboardButton("‚úÖ –î–∞, —Å–±—Ä–æ—Å–∏—Ç—å", callback_data="renewal_confirm_reset")],
                [InlineKeyboardButton("‚ùå –û—Ç–º–µ–Ω–∞", callback_data="admin_renewal")]
            ]
            reply_markup = InlineKeyboardMarkup(keyboard)
            
            await self.safe_edit_or_send_message(
                update, context,
                "‚ö†Ô∏è <b>–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ —Å–±—Ä–æ—Å–∞</b>\n\n"
                "–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —Å–±—Ä–æ—Å–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –ø—Ä–æ–¥–ª–µ–Ω–∏—è –∫ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–º?\n\n"
                "–≠—Ç–æ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–µ–ª—å–∑—è –æ—Ç–º–µ–Ω–∏—Ç—å.",
                reply_markup
            )
        
        elif data == "renewal_confirm_reset":
            # –°–±—Ä–æ—Å –∫ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º
            default_message = (
                "‚è∞ <b>–í–∞—à–∞ –ø–æ–¥–ø–∏—Å–∫–∞ –∏—Å—Ç–µ–∫–∞–µ—Ç —Å–µ–≥–æ–¥–Ω—è!</b>\n\n"
                "üí≥ –ß—Ç–æ–±—ã –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å –ø–æ–ª—É—á–∞—Ç—å —ç–∫—Å–∫–ª—é–∑–∏–≤–Ω—ã–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã, –ø—Ä–æ–¥–ª–∏—Ç–µ –ø–æ–¥–ø–∏—Å–∫—É.\n\n"
                "‚ú® –ù–µ —É–ø—É—Å—Ç–∏—Ç–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –æ—Å—Ç–∞–≤–∞—Ç—å—Å—è –≤ –∫—É—Ä—Å–µ –≤—Å–µ—Ö –Ω–æ–≤–∏–Ω–æ–∫!"
            )
            
            self.db.set_renewal_message(
                text=default_message,
                photo_url="",
                button_text="–ü—Ä–æ–¥–ª–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É",
                button_url=""
            )
            
            await update.callback_query.answer("‚úÖ –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–±—Ä–æ—à–µ–Ω—ã –∫ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–º!")
            await self.show_renewal_menu(update, context)
        
        else:
            return False  # –ù–µ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ
        
        return True  # –û–±—Ä–∞–±–æ—Ç–∞–Ω–æ

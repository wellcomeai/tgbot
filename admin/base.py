"""
–ë–∞–∑–æ–≤—ã–π –∫–ª–∞—Å—Å –¥–ª—è –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏
"""

from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup, ReplyKeyboardRemove
from telegram.ext import ContextTypes
from telegram.error import BadRequest, TimedOut
from datetime import datetime
import logging
import asyncio
import io

logger = logging.getLogger(__name__)


class AdminBaseMixin:
    """–ë–∞–∑–æ–≤—ã–π –º–∏–∫—Å–∏–Ω –¥–ª—è –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏"""
    
    def __init__(self, db, admin_chat_id):
        self.db = db
        self.admin_chat_id = admin_chat_id
        self.waiting_for = {}  # –°–ª–æ–≤–∞—Ä—å –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –æ–∂–∏–¥–∞–Ω–∏—è –≤–≤–æ–¥–∞
        self.broadcast_drafts = {}  # –ß–µ—Ä–Ω–æ–≤–∏–∫–∏ –º–∞—Å—Å–æ–≤—ã—Ö —Ä–∞—Å—Å—ã–ª–æ–∫
    
    async def cleanup_old_waiting_states(self):
        """–û—á–∏—Å—Ç–∫–∞ —Å—Ç–∞—Ä—ã—Ö —Å–æ—Å—Ç–æ—è–Ω–∏–π –æ–∂–∏–¥–∞–Ω–∏—è –≤–≤–æ–¥–∞"""
        while True:
            try:
                current_time = datetime.now()
                to_delete = []
                
                for user_id, data in self.waiting_for.items():
                    if 'created_at' in data:
                        age = current_time - data['created_at']
                        if age.total_seconds() > 1800:  # 30 –º–∏–Ω—É—Ç
                            to_delete.append(user_id)
                
                for user_id in to_delete:
                    del self.waiting_for[user_id]
                    logger.info(f"üßπ –û—á–∏—â–µ–Ω–æ —É—Å—Ç–∞—Ä–µ–≤—à–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –æ–∂–∏–¥–∞–Ω–∏—è –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}")
                
                # –û—á–∏—Å—Ç–∫–∞ —Å—Ç–∞—Ä—ã—Ö —á–µ—Ä–Ω–æ–≤–∏–∫–æ–≤
                to_delete_drafts = []
                for user_id, draft in self.broadcast_drafts.items():
                    if 'created_at' in draft:
                        age = current_time - draft['created_at']
                        if age.total_seconds() > 7200:  # 2 —á–∞—Å–∞
                            to_delete_drafts.append(user_id)
                
                for user_id in to_delete_drafts:
                    del self.broadcast_drafts[user_id]
                    logger.info(f"üßπ –û—á–∏—â–µ–Ω —É—Å—Ç–∞—Ä–µ–≤—à–∏–π —á–µ—Ä–Ω–æ–≤–∏–∫ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}")
                
                await asyncio.sleep(1800)  # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞–∂–¥—ã–µ 30 –º–∏–Ω—É—Ç
                
            except Exception as e:
                logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—á–∏—Å—Ç–∫–µ —Å–æ—Å—Ç–æ—è–Ω–∏–π: {e}")
                await asyncio.sleep(1800)
    
    async def show_main_menu(self, update: Update, context: ContextTypes.DEFAULT_TYPE):
        """–ü–æ–∫–∞–∑–∞—Ç—å –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏"""
        stats = self.db.get_user_statistics()
        
        text = (
            "üõ† <b>–ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å</b>\n\n"
            f"üë• <b>–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏:</b> {stats['total_users']}\n"
            f"üöÄ <b>–ù–∞—á–∞–ª–∏ —Ä–∞–∑–≥–æ–≤–æ—Ä:</b> {stats['bot_started_users']}\n"
            f"üí∞ <b>–û–ø–ª–∞—Ç–∏–ª–∏:</b> {stats['paid_users']}\n"
            f"üìä <b>–ù–æ–≤—ã—Ö –∑–∞ 24—á:</b> {stats['new_users_24h']}\n"
            f"üì® <b>–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ:</b> {stats['sent_messages']}\n"
            f"‚ùå <b>–û—Ç–ø–∏—Å–∞–ª–∏—Å—å:</b> {stats['unsubscribed']}\n\n"
            "–í—ã–±–µ—Ä–∏—Ç–µ —Ä–∞–∑–¥–µ–ª:"
        )
        
        keyboard = [
            [InlineKeyboardButton("üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞", callback_data="admin_stats")],
            [InlineKeyboardButton("üë• –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏", callback_data="admin_users")],
            [InlineKeyboardButton("‚úâÔ∏è –†–∞—Å—Å—ã–ª–∫–∞", callback_data="admin_broadcast")],
            [InlineKeyboardButton("üí∞ –†–∞—Å—Å—ã–ª–∫–∞ –¥–ª—è –æ–ø–ª–∞—Ç–∏–≤—à–∏—Ö", callback_data="admin_paid_broadcast")],
            [InlineKeyboardButton("üîÑ –°—Ç–∞—Ç—É—Å —Ä–∞—Å—Å—ã–ª–∫–∏", callback_data="admin_broadcast_status")],
            [InlineKeyboardButton("üì¢ –ú–∞—Å—Å–æ–≤–∞—è —Ä–∞—Å—Å—ã–ª–∫–∞", callback_data="admin_send_all")],
            [InlineKeyboardButton("‚è∞ –ó–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Ä–∞—Å—Å—ã–ª–∫–∏", callback_data="admin_scheduled_broadcasts")],
            [InlineKeyboardButton("üëã –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ", callback_data="admin_welcome")],
            [InlineKeyboardButton("üëã –ü—Ä–æ—â–∞–Ω–∏–µ", callback_data="admin_goodbye")],
            [InlineKeyboardButton("‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ", callback_data="admin_success_message")],
            [InlineKeyboardButton("üí≥ –°–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ–ø–ª–∞—Ç–µ", callback_data="admin_payment_message")],
            [InlineKeyboardButton("üí∞ –°–æ–æ–±—â–µ–Ω–∏—è –ø—Ä–æ–¥–ª–µ–Ω–∏—è", callback_data="admin_renewal")],
            [InlineKeyboardButton("üìà –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–ª–∞—Ç–µ–∂–µ–π", callback_data="admin_payment_stats")]
        ]
        reply_markup = InlineKeyboardMarkup(keyboard)
        
        await self.safe_edit_or_send_message(update, context, text, reply_markup)
    
    async def safe_edit_or_send_message(self, update: Update, context: ContextTypes.DEFAULT_TYPE, 
                                      text: str, reply_markup=None):
        """–ë–µ–∑–æ–ø–∞—Å–Ω–æ–µ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–ª–∏ –æ—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è"""
        try:
            if update.callback_query and update.callback_query.message:
                # –ü—ã—Ç–∞–µ–º—Å—è –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
                try:
                    await update.callback_query.edit_message_text(
                        text=text,
                        reply_markup=reply_markup,
                        parse_mode='HTML'
                    )
                    return
                except BadRequest as e:
                    # –ï—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–æ–≤–æ–µ
                    logger.debug(f"–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ: {e}")
            
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
            if update.callback_query:
                user_id = update.callback_query.from_user.id
            else:
                user_id = update.effective_user.id
            
            await context.bot.send_message(
                chat_id=user_id,
                text=text,
                reply_markup=reply_markup,
                parse_mode='HTML'
            )
            
        except TimedOut as e:
            logger.warning(f"‚ö†Ô∏è Timeout –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è: {e}")
        except Exception as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è –∞–¥–º–∏–Ω—É: {e}")
    
    async def show_main_menu_safe(self, update: Update, context: ContextTypes.DEFAULT_TYPE):
        """–ë–µ–∑–æ–ø–∞—Å–Ω–æ–µ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é –∏–∑ –ª—é–±–æ–≥–æ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞"""
        try:
            await self.show_main_menu(update, context)
        except Exception as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∫–∞–∑–µ –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é: {e}")
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ
            user_id = self.admin_chat_id
            try:
                await context.bot.send_message(
                    chat_id=user_id,
                    text="‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /start",
                    reply_markup=ReplyKeyboardRemove()
                )
            except Exception as e2:
                logger.error(f"‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è –æ–± –æ—à–∏–±–∫–µ: {e2}")
    
    async def send_new_menu_message(self, context: ContextTypes.DEFAULT_TYPE, user_id: int, 
                                  text: str, reply_markup=None):
        """–û—Ç–ø—Ä–∞–≤–∫–∞ –Ω–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –º–µ–Ω—é"""
        try:
            await context.bot.send_message(
                chat_id=user_id,
                text=text,
                reply_markup=reply_markup,
                parse_mode='HTML'
            )
        except Exception as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –Ω–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –º–µ–Ω—é: {e}")
    
    async def request_text_input(self, update: Update, context: ContextTypes.DEFAULT_TYPE, 
                               input_type: str, **kwargs):
        """–ó–∞–ø—Ä–æ—Å–∏—Ç—å –≤–≤–æ–¥ —Ç–µ–∫—Å—Ç–∞ –æ—Ç –∞–¥–º–∏–Ω–∞ - –£–ù–ò–í–ï–†–°–ê–õ–¨–ù–´–ô –ú–ï–¢–û–î"""
        user_id = update.callback_query.from_user.id
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –æ–∂–∏–¥–∞–Ω–∏—è –≤–≤–æ–¥–∞
        self.waiting_for[user_id] = {
            "type": input_type,
            "created_at": datetime.now(),
            **kwargs
        }
        
        # –ü–æ–ª—É—á–∞–µ–º –Ω–æ–º–µ—Ä —Å–æ–æ–±—â–µ–Ω–∏—è –µ—Å–ª–∏ –µ—Å—Ç—å
        message_number = kwargs.get('message_number', '')
        button_id = kwargs.get('button_id', '')
        
        # –ü–û–õ–ù–´–ô —Å–ª–æ–≤–∞—Ä—å –≤—Å–µ—Ö —Ç–∏–ø–æ–≤ –≤–≤–æ–¥–∞
        prompt_texts = {
            # === –ë–ê–ó–û–í–´–ï –°–û–û–ë–©–ï–ù–ò–Ø ===
            "welcome": "‚úèÔ∏è –û—Ç–ø—Ä–∞–≤—å—Ç–µ –Ω–æ–≤—ã–π —Ç–µ–∫—Å—Ç –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è:",
            "welcome_photo": "üñº –û—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–æ—Ç–æ –Ω–∞–ø—Ä—è–º—É—é –∏–ª–∏ —Å—Å—ã–ª–∫—É –Ω–∞ —Ñ–æ—Ç–æ (http://...):",
            "goodbye": "‚úèÔ∏è –û—Ç–ø—Ä–∞–≤—å—Ç–µ –Ω–æ–≤—ã–π —Ç–µ–∫—Å—Ç –ø—Ä–æ—â–∞–ª—å–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è:",
            "goodbye_photo": "üñº –û—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–æ—Ç–æ –Ω–∞–ø—Ä—è–º—É—é –∏–ª–∏ —Å—Å—ã–ª–∫—É –Ω–∞ —Ñ–æ—Ç–æ (http://...):",
            "success_message": "‚úèÔ∏è –û—Ç–ø—Ä–∞–≤—å—Ç–µ –Ω–æ–≤—ã–π —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è:",
            
            # === –†–ê–°–°–´–õ–ö–ò - –û–°–ù–û–í–ù–ê–Ø –í–û–†–û–ù–ö–ê ===
            "broadcast_text": f"‚úèÔ∏è –û—Ç–ø—Ä–∞–≤—å—Ç–µ –Ω–æ–≤—ã–π —Ç–µ–∫—Å—Ç –¥–ª—è —Å–æ–æ–±—â–µ–Ω–∏—è {message_number}:",
            "broadcast_delay": self._get_delay_text(message_number) if message_number else "‚è∞ –û—Ç–ø—Ä–∞–≤—å—Ç–µ –∑–∞–¥–µ—Ä–∂–∫—É:",
            "broadcast_photo": f"üñº –û—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–æ—Ç–æ –¥–ª—è —Å–æ–æ–±—â–µ–Ω–∏—è {message_number} –Ω–∞–ø—Ä—è–º—É—é –∏–ª–∏ —Å—Å—ã–ª–∫—É (http://...):" if message_number else "üñº –û—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–æ—Ç–æ:",
            "broadcast_timer": "‚è∞ –ù–∞ —Å–∫–æ–ª—å–∫–æ —á–∞—Å–æ–≤ –æ—Ç–∫–ª—é—á–∏—Ç—å —Ä–∞—Å—Å—ã–ª–∫—É?\n\n–ü—Ä–∏–º–µ—Ä: <code>2.5</code> (–Ω–∞ 2,5 —á–∞—Å–∞)",
            
            # === –ö–ù–û–ü–ö–ò –û–°–ù–û–í–ù–û–ô –í–û–†–û–ù–ö–ò ===
            "add_button": f"‚úèÔ∏è –û—Ç–ø—Ä–∞–≤—å—Ç–µ —Ç–µ–∫—Å—Ç –¥–ª—è –Ω–æ–≤–æ–π –∫–Ω–æ–ø–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è {message_number}:\n\nüí° –ü–æ—Å–ª–µ —ç—Ç–æ–≥–æ –º—ã –ø–æ–ø—Ä–æ—Å–∏–º URL –¥–ª—è –∫–Ω–æ–ø–∫–∏.",
            "edit_button_text": "‚úèÔ∏è –û—Ç–ø—Ä–∞–≤—å—Ç–µ –Ω–æ–≤—ã–π —Ç–µ–∫—Å—Ç –¥–ª—è –∫–Ω–æ–ø–∫–∏:",
            "edit_button_url": "üîó –û—Ç–ø—Ä–∞–≤—å—Ç–µ –Ω–æ–≤—ã–π URL –¥–ª—è –∫–Ω–æ–ø–∫–∏:",
            
            # === –ú–ê–°–°–û–í–´–ï –†–ê–°–°–´–õ–ö–ò ===
            "mass_text": "‚úèÔ∏è –û—Ç–ø—Ä–∞–≤—å—Ç–µ —Ç–µ–∫—Å—Ç –¥–ª—è –º–∞—Å—Å–æ–≤–æ–π —Ä–∞—Å—Å—ã–ª–∫–∏:",
            "mass_photo": "üñº –û—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–æ—Ç–æ –Ω–∞–ø—Ä—è–º—É—é –∏–ª–∏ —Å—Å—ã–ª–∫—É –Ω–∞ —Ñ–æ—Ç–æ (http://...):",
            "mass_time": "‚è∞ –ß–µ—Ä–µ–∑ —Å–∫–æ–ª—å–∫–æ —á–∞—Å–æ–≤ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Ä–∞—Å—Å—ã–ª–∫—É?\n\n–ü—Ä–∏–º–µ—Ä—ã: 1, 2.5, 24\n\n–û—Å—Ç–∞–≤—å—Ç–µ –ø—É—Å—Ç—ã–º –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–µ–π—á–∞—Å:",
            "mass_button_text": "‚úèÔ∏è –û—Ç–ø—Ä–∞–≤—å—Ç–µ —Ç–µ–∫—Å—Ç –¥–ª—è –∫–Ω–æ–ø–∫–∏:",
            "mass_button_url": "üîó –û—Ç–ø—Ä–∞–≤—å—Ç–µ URL –¥–ª—è –∫–Ω–æ–ø–∫–∏:",
            
            # === –ü–õ–ê–¢–ï–ñ–ò ===
            "payment_message_text": "‚úèÔ∏è –û—Ç–ø—Ä–∞–≤—å—Ç–µ –Ω–æ–≤—ã–π —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ—Å–ª–µ –æ–ø–ª–∞—Ç—ã:\n\nüí° –ú–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é {amount} - –æ–Ω–∞ –±—É–¥–µ—Ç –∑–∞–º–µ–Ω–µ–Ω–∞ –Ω–∞ —Å—É–º–º—É –ø–ª–∞—Ç–µ–∂–∞.",
            "payment_message_photo": "üñº –û—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–æ—Ç–æ –Ω–∞–ø—Ä—è–º—É—é –∏–ª–∏ —Å—Å—ã–ª–∫—É –Ω–∞ —Ñ–æ—Ç–æ (http://...):",
            
            # === –ü–†–û–î–õ–ï–ù–ò–ï ===
            "renewal_text": "‚úèÔ∏è –û—Ç–ø—Ä–∞–≤—å—Ç–µ —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –æ –ø—Ä–æ–¥–ª–µ–Ω–∏–∏ –ø–æ–¥–ø–∏—Å–∫–∏:",
            "renewal_photo": "üñº –û—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–æ—Ç–æ –Ω–∞–ø—Ä—è–º—É—é –∏–ª–∏ —Å—Å—ã–ª–∫—É –Ω–∞ —Ñ–æ—Ç–æ (http://...):",
            "renewal_button_text": "üìù –û—Ç–ø—Ä–∞–≤—å—Ç–µ —Ç–µ–∫—Å—Ç –∫–Ω–æ–ø–∫–∏ –ø—Ä–æ–¥–ª–µ–Ω–∏—è:",
            "renewal_button_url": "üîó –û—Ç–ø—Ä–∞–≤—å—Ç–µ URL –¥–ª—è –∫–Ω–æ–ø–∫–∏ –ø—Ä–æ–¥–ª–µ–Ω–∏—è:",
            
            # === –ö–ù–û–ü–ö–ò –ü–†–ò–í–ï–¢–°–¢–í–ò–Ø ===
            "add_welcome_button": "‚å®Ô∏è –û—Ç–ø—Ä–∞–≤—å—Ç–µ —Ç–µ–∫—Å—Ç –¥–ª—è –Ω–æ–≤–æ–π –∫–Ω–æ–ø–∫–∏ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è:",
            "edit_welcome_button_text": "üìù –û—Ç–ø—Ä–∞–≤—å—Ç–µ –Ω–æ–≤—ã–π —Ç–µ–∫—Å—Ç –¥–ª—è –∫–Ω–æ–ø–∫–∏:",
            
            # === –ö–ù–û–ü–ö–ò –ü–†–û–©–ê–ù–ò–Ø ===
            "add_goodbye_button": "üîò –û—Ç–ø—Ä–∞–≤—å—Ç–µ —Ç–µ–∫—Å—Ç –¥–ª—è –Ω–æ–≤–æ–π –∫–Ω–æ–ø–∫–∏ –ø—Ä–æ—â–∞–Ω–∏—è:\n\nüí° –ü–æ—Å–ª–µ —ç—Ç–æ–≥–æ –º—ã –ø–æ–ø—Ä–æ—Å–∏–º URL –¥–ª—è –∫–Ω–æ–ø–∫–∏.",
            "edit_goodbye_button_text": "üìù –û—Ç–ø—Ä–∞–≤—å—Ç–µ –Ω–æ–≤—ã–π —Ç–µ–∫—Å—Ç –¥–ª—è –∫–Ω–æ–ø–∫–∏:",
            "edit_goodbye_button_url": "üîó –û—Ç–ø—Ä–∞–≤—å—Ç–µ –Ω–æ–≤—ã–π URL –¥–ª—è –∫–Ω–æ–ø–∫–∏:",
            
            # === –ü–õ–ê–¢–ù–´–ï –†–ê–°–°–´–õ–ö–ò - –í–û–†–û–ù–ö–ê ===
            "paid_broadcast_text": f"üí∞ ‚úèÔ∏è –û—Ç–ø—Ä–∞–≤—å—Ç–µ –Ω–æ–≤—ã–π —Ç–µ–∫—Å—Ç –¥–ª—è —Å–æ–æ–±—â–µ–Ω–∏—è –æ–ø–ª–∞—Ç–∏–≤—à–∏—Ö {message_number}:",
            "paid_broadcast_delay": f"üí∞ ‚è∞ –û—Ç–ø—Ä–∞–≤—å—Ç–µ –Ω–æ–≤—É—é –∑–∞–¥–µ—Ä–∂–∫—É –¥–ª—è —Å–æ–æ–±—â–µ–Ω–∏—è –æ–ø–ª–∞—Ç–∏–≤—à–∏—Ö {message_number} –ø–æ—Å–ª–µ –æ–ø–ª–∞—Ç—ã:\n\n" + 
                                   "üìù <b>–§–æ—Ä–º–∞—Ç—ã –≤–≤–æ–¥–∞:</b>\n" +
                                   "‚Ä¢ <code>30–º</code> –∏–ª–∏ <code>30 –º–∏–Ω—É—Ç</code> - –¥–ª—è –º–∏–Ω—É—Ç\n" +
                                   "‚Ä¢ <code>2—á</code> –∏–ª–∏ <code>2 —á–∞—Å–∞</code> - –¥–ª—è —á–∞—Å–æ–≤\n" +
                                   "‚Ä¢ <code>1.5</code> - –¥–ª—è 1.5 —á–∞—Å–æ–≤\n" +
                                   "‚Ä¢ <code>0</code> - –¥–ª—è –º–≥–Ω–æ–≤–µ–Ω–Ω–æ–π –æ—Ç–ø—Ä–∞–≤–∫–∏\n\n" +
                                   "üí° –ü—Ä–∏–º–µ—Ä—ã: <code>3–º</code>, <code>30 –º–∏–Ω—É—Ç</code>, <code>2—á</code>, <code>0</code>",
            "paid_broadcast_photo": f"üí∞ üñº –û—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–æ—Ç–æ –¥–ª—è —Å–æ–æ–±—â–µ–Ω–∏—è –æ–ø–ª–∞—Ç–∏–≤—à–∏—Ö {message_number} –Ω–∞–ø—Ä—è–º—É—é –∏–ª–∏ —Å—Å—ã–ª–∫—É (http://...):",
            
            # === –ö–ù–û–ü–ö–ò –ü–õ–ê–¢–ù–û–ô –í–û–†–û–ù–ö–ò ===
            "add_paid_button": f"üí∞ ‚úèÔ∏è –û—Ç–ø—Ä–∞–≤—å—Ç–µ —Ç–µ–∫—Å—Ç –¥–ª—è –∫–Ω–æ–ø–∫–∏ –ø–ª–∞—Ç–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è {message_number}:\n\nüí° –ü–æ—Å–ª–µ —ç—Ç–æ–≥–æ –º—ã –ø–æ–ø—Ä–æ—Å–∏–º URL.",
            
            # === –ú–ê–°–°–û–í–´–ï –ü–õ–ê–¢–ù–´–ï –†–ê–°–°–´–õ–ö–ò ===
            "paid_mass_text": "üí∞ ‚úèÔ∏è –û—Ç–ø—Ä–∞–≤—å—Ç–µ —Ç–µ–∫—Å—Ç –¥–ª—è –º–∞—Å—Å–æ–≤–æ–π —Ä–∞—Å—Å—ã–ª–∫–∏ –æ–ø–ª–∞—Ç–∏–≤—à–∏—Ö:",
            "paid_mass_photo": "üí∞ üñº –û—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–æ—Ç–æ –Ω–∞–ø—Ä—è–º—É—é –∏–ª–∏ —Å—Å—ã–ª–∫—É –Ω–∞ —Ñ–æ—Ç–æ (http://...):",
            "paid_mass_time": "üí∞ ‚è∞ –ß–µ—Ä–µ–∑ —Å–∫–æ–ª—å–∫–æ —á–∞—Å–æ–≤ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Ä–∞—Å—Å—ã–ª–∫—É –æ–ø–ª–∞—Ç–∏–≤—à–∏—Ö?\n\n–ü—Ä–∏–º–µ—Ä—ã: 1, 2.5, 24\n\n–û—Å—Ç–∞–≤—å—Ç–µ –ø—É—Å—Ç—ã–º –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–µ–π—á–∞—Å:",
            "paid_mass_button_text": "üí∞ ‚úèÔ∏è –û—Ç–ø—Ä–∞–≤—å—Ç–µ —Ç–µ–∫—Å—Ç –¥–ª—è –∫–Ω–æ–ø–∫–∏:",
            "paid_mass_button_url": "üí∞ üîó –û—Ç–ø—Ä–∞–≤—å—Ç–µ URL –¥–ª—è –∫–Ω–æ–ø–∫–∏:",
        }
        
        # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—Å—Ç –ø–æ–¥—Å–∫–∞–∑–∫–∏
        prompt_text = prompt_texts.get(input_type, "‚úèÔ∏è –û—Ç–ø—Ä–∞–≤—å—Ç–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –¥–∞–Ω–Ω—ã–µ:")
        
        # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –∫–Ω–æ–ø–∫—É –æ—Ç–º–µ–Ω—ã –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞
        if input_type.startswith("renewal"):
            cancel_callback_data = "admin_renewal"
        elif input_type.startswith("paid_"):
            cancel_callback_data = "admin_paid_broadcast"
        elif input_type.startswith("mass_"):
            cancel_callback_data = "admin_send_all"
        elif input_type.startswith("broadcast_"):
            cancel_callback_data = "admin_broadcast"
        elif input_type.startswith("goodbye"):
            cancel_callback_data = "admin_goodbye"
        elif input_type.startswith("welcome"):
            cancel_callback_data = "admin_welcome"
        elif input_type == "payment_message_text" or input_type == "payment_message_photo":
            cancel_callback_data = "admin_payment_message"
        else:
            cancel_callback_data = "admin_back"
        
        cancel_markup = InlineKeyboardMarkup([[
            InlineKeyboardButton("‚ùå –û—Ç–º–µ–Ω–∞", callback_data=cancel_callback_data)
        ]])
        
        await self.safe_edit_or_send_message(update, context, prompt_text, cancel_markup)
    
    async def show_error_message(self, update: Update, context: ContextTypes.DEFAULT_TYPE, error_text: str):
        """–ü–æ–∫–∞–∑–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ"""
        try:
            keyboard = [[InlineKeyboardButton("¬´ –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é", callback_data="admin_back")]]
            reply_markup = InlineKeyboardMarkup(keyboard)
            
            await self.safe_edit_or_send_message(update, context, error_text, reply_markup)
        except Exception as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∫–∞–∑–µ —Å–æ–æ–±—â–µ–Ω–∏—è –æ–± –æ—à–∏–±–∫–µ: {e}")
    
    def validate_waiting_state(self, waiting_data: dict) -> bool:
        """–í–∞–ª–∏–¥–∞—Ü–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è –æ–∂–∏–¥–∞–Ω–∏—è –≤–≤–æ–¥–∞"""
        if not waiting_data:
            return False
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–æ–∑—Ä–∞—Å—Ç —Å–æ—Å—Ç–æ—è–Ω–∏—è
        if 'created_at' in waiting_data:
            age = datetime.now() - waiting_data['created_at']
            if age.total_seconds() > 1800:  # 30 –º–∏–Ω—É—Ç
                return False
        
        return True
    
    def _get_delay_text(self, message_number):
        """–ü–æ–ª—É—á–∏—Ç—å —Ç–µ–∫—Å—Ç –¥–ª—è –≤–≤–æ–¥–∞ –∑–∞–¥–µ—Ä–∂–∫–∏"""
        return (
            f"‚è∞ –û—Ç–ø—Ä–∞–≤—å—Ç–µ –Ω–æ–≤—É—é –∑–∞–¥–µ—Ä–∂–∫—É –¥–ª—è —Å–æ–æ–±—â–µ–Ω–∏—è {message_number}:\n\n"
            f"üìù <b>–§–æ—Ä–º–∞—Ç—ã –≤–≤–æ–¥–∞:</b>\n"
            f"‚Ä¢ <code>30–º</code> –∏–ª–∏ <code>30 –º–∏–Ω—É—Ç</code> - –¥–ª—è –º–∏–Ω—É—Ç\n"
            f"‚Ä¢ <code>2—á</code> –∏–ª–∏ <code>2 —á–∞—Å–∞</code> - –¥–ª—è —á–∞—Å–æ–≤\n"
            f"‚Ä¢ <code>1.5</code> - –¥–ª—è 1.5 —á–∞—Å–æ–≤\n"
            f"‚Ä¢ <code>0.05</code> - –¥–ª—è 3 –º–∏–Ω—É—Ç\n\n"
            f"üí° –ü—Ä–∏–º–µ—Ä—ã: <code>3–º</code>, <code>30 –º–∏–Ω—É—Ç</code>, <code>2—á</code>, <code>1.5</code>"
        )
    
    def format_delay_display(self, delay_hours: float) -> str:
        """–§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∑–∞–¥–µ—Ä–∂–∫–∏"""
        if delay_hours < 1:
            minutes = int(delay_hours * 60)
            return f"{minutes}–º"
        elif delay_hours == int(delay_hours):
            return f"{int(delay_hours)}—á"
        else:
            return f"{delay_hours}—á"
    
    def format_delay_display_full(self, delay_hours: float) -> str:
        """–ü–æ–ª–Ω–æ–µ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∑–∞–¥–µ—Ä–∂–∫–∏"""
        if delay_hours < 1:
            minutes = int(delay_hours * 60)
            return f"{minutes} –º–∏–Ω—É—Ç"
        elif delay_hours == 1:
            return "1 —á–∞—Å"
        elif delay_hours == int(delay_hours):
            return f"{int(delay_hours)} —á–∞—Å–æ–≤"
        else:
            return f"{delay_hours} —á–∞—Å–æ–≤"
    
    def parse_delay_input(self, text: str) -> tuple:
        """–ü–∞—Ä—Å–∏–Ω–≥ –≤–≤–æ–¥–∞ –∑–∞–¥–µ—Ä–∂–∫–∏ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
        try:
            text = text.strip().lower()
            
            # –£–¥–∞–ª—è–µ–º –ª–∏—à–Ω–∏–µ –ø—Ä–æ–±–µ–ª—ã
            text = ' '.join(text.split())
            
            # –ü–∞—Ä—Å–∏–Ω–≥ —Ä–∞–∑–ª–∏—á–Ω—ã—Ö —Ñ–æ—Ä–º–∞—Ç–æ–≤
            if '–º' in text or '–º–∏–Ω' in text:
                # –ú–∏–Ω—É—Ç—ã
                number_str = text.replace('–º', '').replace('–º–∏–Ω', '').replace('–∏–Ω—É—Ç', '').replace('—ã', '').replace('–∞', '').strip()
                minutes = float(number_str)
                hours = minutes / 60
                return hours, self.format_delay_display(hours)
                
            elif '—á' in text or '—á–∞—Å' in text:
                # –ß–∞—Å—ã
                number_str = text.replace('—á', '').replace('—á–∞—Å', '').replace('–æ–≤', '').replace('–∞', '').strip()
                hours = float(number_str)
                return hours, self.format_delay_display(hours)
                
            else:
                # –ü—Ä–æ—Å—Ç–æ —á–∏—Å–ª–æ - —Å—á–∏—Ç–∞–µ–º —á–∞—Å–∞–º–∏
                hours = float(text)
                return hours, self.format_delay_display(hours)
                
        except ValueError:
            return None, None
